/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package formularios;

import conexionSQL.conexionSQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sergi
 */
public class sistema extends javax.swing.JFrame {

    
    conexionSQL cc= new conexionSQL();
    Connection con=cc.conexion();
    
    
    public sistema() {
        initComponents();
        
        //aparezca el jframe en el centro de la pantalla
        this.setLocationRelativeTo(null);
        //fondo al jframe
        this.getContentPane().setBackground(getBackground());
        //llama funcion
        mostrarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbMateria = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCalificacion = new javax.swing.JTextField();
        cbEstatus = new javax.swing.JComboBox<>();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlumnos = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));

        jLabel1.setText("Nombre:");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel2.setText("Apellidos:");

        txtApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidosActionPerformed(evt);
            }
        });

        jLabel3.setText("Materia:");

        cbMateria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matematicas", "Español", "Ingles", "Programación", "Geografia" }));

        jLabel4.setText("Calificación:");

        jLabel5.setText("Estatus:");

        cbEstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aprobado", "Reprobado" }));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(38, 38, 38)
                                .addComponent(cbMateria, 0, 178, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCalificacion)
                                    .addComponent(cbEstatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNombre)
                                    .addComponent(txtApellidos, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnEliminar)
                    .addComponent(btnGuardar)
                    .addComponent(btnActualizar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablaAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaAlumnos);

        jLabel6.setText("Busqueda:");

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidosActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        //BOTON GUARDAR
        insertarDatos();
        limpiarCajas();
        mostrarDatos();
    }//GEN-LAST:event_btnGuardarActionPerformed
    
    
    
    public void filtrarDatos(String valor){
        //titulos tablas
        String[] titulos={"ID ","Nombre","Apellidos","Materia","Calificacio","Estatus"};
        //Numero columnas
        String[] registros=new String[7];
        //objeto para modificar la tabla
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        //sentencia SQL consulte datos tabla alumnos solo para el valor ingresado filtrando en este caso por nombre
        String SQL="select * from alumnos where nombre like '%"+valor+"%'";
        
        try {
            //objeto statement igual al objeto conexion
            Statement st=con.createStatement();
            //ejecuta la consulta
            ResultSet rs=st.executeQuery(SQL);
            //recorre todos los reultados de la consulta con el metodo next
            while(rs.next()){
            //registros se van pasando a las filas
            registros[0]=rs.getString("idalumnos");
            registros[1]=rs.getString("nombre");
            registros[2]=rs.getString("apellidos");
            registros[3]=rs.getString("materia");
            registros[4]=rs.getString("calificacion");
            registros[5]=rs.getString("estatus");
            //añade los registros al objeto modelo
            modelo.addRow(registros);
            }
            //se le envian a la tabla los registros con el objeto modelo
            tablaAlumnos.setModel(modelo);
        
        } catch(Exception e){
            
            JOptionPane.showMessageDialog(null,"Error al mostrar Datos:  "+e.getMessage());        
            
        }
    
    }
    
    
    
    public void mostrarDatos(){
        //titulos tablas
        String[] titulos={"ID ","Nombre","Apellidos","Materia","Calificacio","Estatus"};
        //Numero columnas
        String[] registros=new String[7];
        //objeto para modificar la tabla
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        //sentencia SQL consulte datos tabla alumnos
        String SQL="select * from alumnos";
        
        try {
            //objeto statement igual al objeto conexion
            Statement st=con.createStatement();
            //ejecuta la consulta
            ResultSet rs=st.executeQuery(SQL);
            //recorre todos los reultados de la consulta con el metodo next
            while(rs.next()){
            //registros se van pasando a las filas
            registros[0]=rs.getString("idalumnos");
            registros[1]=rs.getString("nombre");
            registros[2]=rs.getString("apellidos");
            registros[3]=rs.getString("materia");
            registros[4]=rs.getString("calificacion");
            registros[5]=rs.getString("estatus");
            //añade los registros al objeto modelo
            modelo.addRow(registros);
            }
            //se le envian a la tabla los registros con el objeto modelo
            tablaAlumnos.setModel(modelo);
        
        } catch(Exception e){
            
            JOptionPane.showMessageDialog(null,"Error al mostrar Datos:  "+e.getMessage());        
            
        }
    
    }
    
    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
          limpiarCajas();
                  
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tablaAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAlumnosMouseClicked
        //guardar el punto seleccionado
        int fiaSeleccionada=tablaAlumnos.rowAtPoint(evt.getPoint());
        //enviar la info a las cajas de texto
        txtNombre.setText(tablaAlumnos.getValueAt(fiaSeleccionada, 1).toString());
        txtApellidos.setText(tablaAlumnos.getValueAt(fiaSeleccionada, 2).toString());
        cbMateria.setSelectedItem(tablaAlumnos.getValueAt(fiaSeleccionada, 3));
        txtCalificacion.setText(tablaAlumnos.getValueAt(fiaSeleccionada, 4).toString());
        cbEstatus.setSelectedItem(tablaAlumnos.getValueAt(fiaSeleccionada, 5));
        
        
    }//GEN-LAST:event_tablaAlumnosMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        actualizarDatos();
        limpiarCajas();
        mostrarDatos();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminarRegistros();
        mostrarDatos();
        limpiarCajas();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        
        filtrarDatos(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased
    
    
    public void eliminarRegistros(){
    
        //obtiene la fila a eliminar
        int filaSeleccionada=tablaAlumnos.getSelectedRow();
        
        try {
            //instrucción para con set hacer referencia a las columnas que se van a editar y con where que lo haga cuando el id sea el id seleccionado
            String SQL=(" delete from alumnos where idalumnos="+tablaAlumnos.getValueAt(filaSeleccionada, 0));
            // objeto statement
            Statement st=con.createStatement(); 
            //ejecuta y guarda para evaluar
            int n=st.executeUpdate(SQL);            
            if(n>=0){            
                JOptionPane.showMessageDialog(null,"Eliminacion exitosa");      
            }
        } catch(Exception e){
        
            JOptionPane.showMessageDialog(null,"Error de Eliminacion: "+e.getMessage());                
        
        }
        
        
    }
    
    
    public void limpiarCajas(){
    
        txtNombre.setText("");
        txtApellidos.setText("");
        txtCalificacion.setText("");
        cbEstatus.setSelectedItem(null);
        cbMateria.setSelectedItem(null);        
    }
       
    
    public void actualizarDatos(){
    
          try{
              //instrucción para con set hacer referencia a las columnas que se van a editar y con where que lo haga cuando el id sea el id seleccionado
              String SQL=(" update alumnos set nombre=?,apellidos=?,materia=?,calificacion=?,estatus=? where idalumnos=?");
              //obtiene la fila seleccionada
              int filaSeleccionado=tablaAlumnos.getSelectedRow();
              //guarda en string el id del seleccionado
              String dao=(String)tablaAlumnos.getValueAt(filaSeleccionado, 0);
              
              //objeto consulta              
              PreparedStatement pst=con.prepareStatement(SQL);
              
              //obtiene lo que haya en el frame
              pst.setString(1, txtNombre.getText());
              pst.setString(2, txtApellidos.getText());
              //para el combobox
              int seleccionado=cbMateria.getSelectedIndex();
              pst.setString(3, cbMateria.getItemAt(seleccionado));
              //para obtener la calificacion en double
              pst.setDouble(4, Double.parseDouble(txtCalificacion.getText()));
              //para status
              int seleccionado1=cbEstatus.getSelectedIndex();
              pst.setString(5, cbEstatus.getItemAt(seleccionado1));
              
              //se envia la variable el id seleccionado
              pst.setString(6, dao);
              
              pst.execute();
              
              JOptionPane.showMessageDialog(null,"Registro Editado Exitoso");
              
              
          } catch(Exception e){
          
              JOptionPane.showMessageDialog(null,"Error de Edicion: "+e.getMessage());                
          
          }
    
    }
    
          
    public void insertarDatos(){
    
          try{
              //instrucción
              String SQL=("insert into alumnos (nombre,apellidos,materia,calificacion,estatus) values (?,?,?,?,?)");
              //consulta
              PreparedStatement pst=con.prepareStatement(SQL);
              
              //obtiene lo que haya en el frame
              pst.setString(1, txtNombre.getText());
              pst.setString(2, txtApellidos.getText());
              //para el combobox
              int seleccionado=cbMateria.getSelectedIndex();
              pst.setString(3, cbMateria.getItemAt(seleccionado));
              //para obtener la calificacion en double
              pst.setDouble(4, Double.parseDouble(txtCalificacion.getText()));
              //para status
              int seleccionado1=cbEstatus.getSelectedIndex();
              pst.setString(5, cbEstatus.getItemAt(seleccionado1));
              
              pst.execute();
              System.out.println("gola2");
              JOptionPane.showMessageDialog(null,"Registro Exitoso");
              
              
          } catch(Exception e){
          
              JOptionPane.showMessageDialog(null,"Error de Registros: "+e.getMessage());                
          
          }
    
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sistema().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cbEstatus;
    private javax.swing.JComboBox<String> cbMateria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaAlumnos;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCalificacion;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
